name: Tests

on:
  push:
    branches: [master]
  pull_request: 
    branches: [master]
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  formatting:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    env:
      HOST_TYPE: ci
      REDIS_QUEUE_HOST: redis
      REDIS_STATE_HOST: redis
    container:
      image: faasm/faabric:0.0.16
    defaults:
      run:
        working-directory: /code/faabric
    services:
      redis:
        image: redis
    steps:
      # --- Code update ---
      - name: "Fetch ref"
        run: git fetch origin ${GITHUB_REF}:ci-branch
      - name: "Check out branch"
        run: git checkout --force ci-branch
      - name: "Run cmake"
        run: inv dev.cmake
      - name: "Rerun build to ensure code is up to date"
        run: inv dev.cc faabric_tests 
      # --- Formatting checks ---
      - name: "Python formatting check"
        run: ./bin/check_python.sh
      - name: "Run C/C++ formatting"
        run: ./bin/run_clang_format.sh 
      - name: "Check C/C++ formatting changes"
        run: git diff --exit-code
      - name: "Run C/C++ linter"
        run: ./bin/run_clang_tidy.sh

  tests:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    env:
      HOST_TYPE: ci
      REDIS_QUEUE_HOST: redis
      REDIS_STATE_HOST: redis
    container:
      image: faasm/faabric:0.0.16
    defaults:
      run:
        working-directory: /code/faabric
    services:
      redis:
        image: redis
    steps:
      # --- Code update ---
      - name: "Fetch ref"
        run: git fetch origin ${GITHUB_REF}:ci-branch
      - name: "Check out branch"
        run: git checkout --force ci-branch
      # --- Set-up ---
      - name: "Ping redis"
        run: redis-cli -h redis ping
      # --- Tests build ---
      - name: "Run cmake static"
        run: inv dev.cmake
      - name: "Build tests"
        run: inv dev.cc faabric_tests
      # --- Tests ---
      - name: "Run tests"
        run: ./bin/faabric_tests
        working-directory: /build/faabric/static

  examples:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    env:
      HOST_TYPE: ci
      REDIS_QUEUE_HOST: redis
      REDIS_STATE_HOST: redis
    container:
      image: faasm/faabric:0.0.16
    defaults:
      run:
        working-directory: /code/faabric
    services:
      redis:
        image: redis
    steps:
      # --- Code update ---
      - name: "Fetch ref"
        run: git fetch origin ${GITHUB_REF}:ci-branch
      - name: "Check out branch"
        run: git checkout --force ci-branch
      # --- Examples ---
      - name: "Run cmake shared"
        run: inv dev.cmake --shared
      - name: "Build Faabric shared library"
        run: inv dev.cc faabric --shared
      - name: "Install Faabric shared library"
        run: inv dev.install faabric --shared
      - name: "Build examples"
        run: inv examples
      - name: "Run example to check"
        run: inv examples.execute check
